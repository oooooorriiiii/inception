
# #user  nobody;
# worker_processes  1;

# #error_log  logs/error.log;
# #error_log  logs/error.log  notice;
# #error_log  logs/error.log  info;

# #pid        logs/nginx.pid;


# events {
#     worker_connections  1024;
# }


# http {
#     include       mime.types;
#     default_type  application/octet-stream;

#     #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#     #                  '$status $body_bytes_sent "$http_referer" '
#     #                  '"$http_user_agent" "$http_x_forwarded_for"';

#     #access_log  logs/access.log  main;

#     sendfile        on;
#     #tcp_nopush     on;

#     #keepalive_timeout  0;
#     keepalive_timeout  65;

#     #gzip  on;

#     # server {
#     #     listen       80;
#     #     server_name  localhost;

#     #     #charset koi8-r;

#     #     #access_log  logs/host.access.log  main;

#     #     location / {
#     #         root   html;
#     #         index  index.html index.htm;
#     #     }

#     #     #error_page  404              /404.html;

#     #     # redirect server error pages to the static page /50x.html
#     #     #
#     #     error_page   500 502 503 504  /50x.html;
#     #     location = /50x.html {
#     #         root   html;
#     #     }

#     #     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #     #
#     #     #location ~ \.php$ {
#     #     #    proxy_pass   http://127.0.0.1;
#     #     #}

#     #     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #     #
#     #     #location ~ \.php$ {
#     #     #    root           html;
#     #     #    fastcgi_pass   127.0.0.1:9000;
#     #     #    fastcgi_index  index.php;
#     #     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #     #    include        fastcgi_params;
#     #     #}

#     #     # deny access to .htaccess files, if Apache's document root
#     #     # concurs with nginx's one
#     #     #
#     #     #location ~ /\.ht {
#     #     #    deny  all;
#     #     #}
#     # }

#     server {
#         listen 80;
#         server_name localhost;

#         return 301 https://$host$request_uri;
#     }


#     # another virtual host using mix of IP-, name-, and port-based configuration
#     #
#     #server {
#     #    listen       8000;
#     #    listen       somename:8080;
#     #    server_name  somename  alias  another.alias;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}


#     # HTTPS server
#     #
#     #server {
#     #    listen       443 ssl;
#     #    server_name  localhost;

#     #    ssl_certificate      cert.pem;
#     #    ssl_certificate_key  cert.key;

#     #    ssl_session_cache    shared:SSL:1m;
#     #    ssl_session_timeout  5m;

#     #    ssl_ciphers  HIGH:!aNULL:!MD5;
#     #    ssl_prefer_server_ciphers  on;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}

#     server {
#         listen      443 ssl;
#         server_name localhost;

#         ssl_certificate     /etc/nginx/ssl/cert.crt;
#         ssl_certificate_key /etc/nginx/ssl/prikey.key;

#         ssl_session_cache    shared:SSL:1m;
#         ssl_session_timeout  5m;

#         ssl_ciphers  HIGH:!aNULL:!MD5;
#         ssl_prefer_server_ciphers  on;

#         location / {
#             root html;
#             index index.html index.htm;
#         }
#     }

# }

user nginx;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger.
error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Uncomment to include files with config snippets into the root context.
# NOTE: This will be enabled by default in Alpine 3.15.
include /etc/nginx/conf.d/*.conf;

events {
	# The maximum number of simultaneous connections that can be opened by
	# a worker process.
	worker_connections 1024;
}

http {
	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Name servers used to resolve names of upstream servers into addresses.
	# It's also needed when using tcpsocket and udpsocket in Lua modules.
	#resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

	# Don't tell nginx version to the clients. Default is 'on'.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable. Default is '1m'.
	client_max_body_size 1m;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	sendfile on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	tcp_nopush on;


	# Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
	# TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
	ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

	# Path of the file with Diffie-Hellman parameters for EDH ciphers.
	# TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
	#ssl_dhparam /etc/ssl/nginx/dh2048.pem;

	# Specifies that our cipher suits should be preferred over client ciphers.
	# Default is 'off'.
	ssl_prefer_server_ciphers on;

	# Enables a shared SSL cache with size that can hold around 8000 sessions.
	# Default is 'none'.
	ssl_session_cache shared:SSL:2m;

	# Specifies a time during which a client may reuse the session parameters.
	# Default is '5m'.
	ssl_session_timeout 1h;

	# Disable TLS session tickets (they are insecure). Default is 'on'.
	ssl_session_tickets off;


	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
	gzip_vary on;


	# Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}


	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	# Sets the path, format, and configuration for a buffered log write.
	access_log /var/log/nginx/access.log main;


	# Includes virtual hosts configs.
	include /etc/nginx/http.d/*.conf;

	server {
		listen 80;
		listen [::]:80;
	
		server_name dpoveda.42.fr www.dpoveda.42.fr;
	
		return 301 https://$host$request_uri;
	}
	
	server {
		listen 443 ssl;
		listen [::]:443 ssl;
	
		server_name dpoveda.42.fr www.dpoveda.42.fr;
	
		ssl_certificate /etc/nginx/ssl/openssl.crt;
		ssl_certificate_key /etc/nginx/ssl/openssl.key;
		ssl_protocols TLSv1.2 TLSv1.3;
	
		root /var/www/html;
	
		index index.php index.html index.htm;
	
		location / {
			autoindex on;
			try_files $uri $uri/ /index.php?$args;
		}
	
		location ~ \.php$ {
			try_files $uri =404;
	
			fastcgi_split_path_info ^(.+\.php)(/.*)$;
	
			fastcgi_pass wordpress:9000;
			fastcgi_index index.php;
	
			include fastcgi_params;
			fastcgi_intercept_errors on;
			#fastcgi_pass php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param QUERY_STRING $query_string;
			fastcgi_param PATH_INFO $fastcgi_path_info;
		}
	}
}
